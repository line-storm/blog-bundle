{% extends 'LineStormBlogBundle:Admin:layout.html.twig' %}
{% block page_title %}New Blog Post{% endblock %}
{% block page_desc %}Pew Pew Pew{% endblock %}

{% block content %}
    <style>
        #blog-post-content {
            min-height: 400px;
            width: 100%;
            margin: 10px 0 0 0;
            padding: 0;
        }
        .post-component-row {
            padding: 0 0 10px 0;
            margin: 0 0 10px 0;
            border-bottom: 1px solid #cccccc;
            list-style: none;
        }
        .post-component-row > .component-handle {
            width: 30px;
            float: left;
        }
        .post-component-row > .component-handle > i {
            font-size: 18px;
            color: #aaa;
            cursor: ns-resize;
        }
        .post-component-row > .component-content {
            float: left;
            width: calc(100% - 35px);
        }
        .post-component {
            border: 1px solid #eaeaea;
            background-color: #fefefe;
            min-height: 200px;
        }

        .dragged {
            position: absolute;
            opacity: 0.5;
            z-index: 2000;
        }

        ul.example li.placeholder {
            position: relative;
            /** More li styles **/
        }
        ul.example li.placeholder:before {
            position: absolute;
            /** Define arrowhead **/
        }
    </style>
    {% stylesheets
        '@LineStormBlogBundle/Resources/public/css/dropzone.css'
        filter='cssrewrite' output='compiled/css/blog.css' %}
     <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}

    {% javascripts
        '@LineStormBlogBundle/Resources/public/js/dropzone.js'
        output='compiled/js/blog.js' %}
        <script type="text/javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}

    {% for component in module.components %}
        {% javascripts
            '@LineStormBlogBundle/Resources/public/js/dropzone.js'
            output='compiled/js/blog.js' %}
            <script type="text/javascript" src="{{ asset_url }}"></script>
        {% endjavascripts %}
        <option value="{{ component.id }}">{{ component.name }}</option>
    {% endfor %}

    <script type="text/javascript" src="/bundles/linestormblog/js/ckeditor/ckeditor.js"></script>
    <script type="text/javascript" src="/bundles/linestormblog/js/ckeditor/adapters/jquery.js"></script>
    <script type="application/javascript">

        window.lineStormBlog = window.lineStormBlog || {};
        window.lineStormBlog.postManager = (function(options){

            var idCount = 1;

            var self = {};

            if(options === undefined){
                options = {};
            }

            self.options = $.extend({

            }, options);

            self.components = {};

            self.form = [];

            self.addComponent = function(name, callback){
                $.ajax({
                    url: '{{ path('linestorm_blog_admin_module_post_api_component_new_component') }}',
                    data: {
                        'component': name
                    },
                    success: function(o){
                        var $e = self.setupComponentForm(name, o.html);
                        var cId = ++idCount;
                        if(!$e.prop('id'))
                            $e.prop('id', 'post-component-'+cId);
                        $e.attr('data-component-id',    cId);
                        $e.attr('data-component-type',  name);
                        self.form.push({
                            id:         cId,
                            type:       name,
                            element:    $e
                        });
                        callback($e);
                    }
                });
            };

            self.removeComponent = function(id){
                var i, b, c;
                for( var i=0,b=self.form.length ; i<b ; i++ ){
                    c = self.form[i];
                    if(c.id === id){
                        self.form.splice(1, i);
                        return true;
                    }
                }
                return false;
            };

            self.save = function(callback){

                var i, b, c, v, data = {
                    components: [],
                    post: self.serializeForm($('form[name="linestorm_blogbundle_blogpost"]'))
                };
                for( i=0,b=self.form.length ; i<b ; i++ ){
                    c = self.form[i];
                    data.components.push({
                        type: c.type,
                        data: self.components[c.type].getValues(c)
                    });
                }

                $.ajax({
                    url: '{{ path('linestorm_blog_admin_module_post_api_post_post_post') }}',
                    type: 'POST',
                    data: JSON.stringify(data),
                    dataType: 'json',
                    success: callback
                });
            };

            self.setupComponentForm = function(name, html){
                var c = self.components[name];
                return c.setupForm(html);
            }

            self.importComponent = function(name, component){
                self.components[name] = component;
            }

            self.serializeForm = function($form)
            {
                var o = {};
                var a = $form.serializeArray();
                $.each(a, function() {
                    if (o[this.name] !== undefined) {
                        if (!o[this.name].push) {
                            o[this.name] = [o[this.name]];
                        }
                        o[this.name].push(this.value || '');
                    } else {
                        o[this.name] = this.value || '';
                    }
                });
                return o;
            };

            return self;

        })();



        (function(){
            var component = (function(){

                var self = {};

                self.setupForm = function(html){
                    return $(html).attr('contenteditable', true).ckeditor().focus();
                };

                self.getValues = function(cObject){
                    var name = cObject.element.ckeditorGet().name;
                    var value = CKEDITOR.instances[name].getData();
                    return {
                        'body': value
                    }
                };

                return self;
            })();
            window.lineStormBlog.postManager.importComponent('article', component);
        })();



        (function(){
            var component = (function(){

                var self = {};

                self.setupForm = function(html){
                    return $(html);
                };

                return self;
            })();
            window.lineStormBlog.postManager.importComponent('gallery', component);
        })();



        $(document).ready(function () {

            var ComponentSelect = $('#ComponentSelect'),
                TitleContent = $('#blog-post-title'),
                PostContent = $('#blog-post-content'),
                PostSave    = $('.post-save')
            ;

            ComponentSelect.on('change', function(){
                if(this.selectedIndex <= 0)
                    return;

                var c = $(this).val();
                window.lineStormBlog.postManager.addComponent(c, function($component){
                    var $row;
                    $row = $('<li class="post-component-row"><div class="component-handle"><i class="fa-ellipsis-h fa-rotate-90 fa-2x pull-left fa-border"></i></div><div class="component-content"></div><div class="clearfix"></div></li>');
                    $component.appendTo($row.find('.component-content'));

                    $row.appendTo(PostContent);
                });
                this.selectedIndex = 0;
            });

            PostSave.on('click', function(){
                window.lineStormBlog.postManager.save(function(){
                    alert('saved!');
                });
            });

            PostContent.sortable({
                handle: '.component-handle > i'
            });
        });
    </script>

    {{ form(form) }}

    <div class="row">
        <label for="ComponentSelect" class="col-sm-2">Add</label>
        <div class="col-sm-10">
            <select id="ComponentSelect" class="form-control">
                <option>Select Component...</option>
                {% for component in module.components %}
                    <option value="{{ component.id }}">{{ component.name }}</option>
                {% endfor %}
            </select>
        </div>
    </div>

    <button class="post-save btn btn-success">
        <i class="fa-save"></i> Save
    </button>

    <ul id="blog-post-content">

    </ul>

    <button class="post-save btn btn-success">
        <i class="fa-save"></i> Save
    </button>

    {# { form_start(form) } #}
    {# { form(form) }}
    {{ form_end(form) } #}
{% endblock %}
